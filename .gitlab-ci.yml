include:
  - project: pipelines/pipelines
    ref: master
    file:
      - "/jobs/build.yaml"
      - "/jobs/docker.yaml"

.global-variables:
  variables:
    SSH_USER: "$ENV_SSH_USER"
    SSH_HOST: "$ENV_SSH_HOST"
    SSH_PRIVATE_KEY_BASE64: "$ENV_PRIVATE_KEY_BASE64"

stages:
  - build
  - deploy

build:
  stage: build
  extends:
    - .build
  # Опционально: добавьте специфичные для build команды
  script:
    - echo "Building the project..."
    - your-build-command-here

deploy:
  stage: deploy
  extends:
    - .docker_run
    - .global-variables
  image: ubuntu:22.04  # Используем современный образ
  variables:
    OPT_DOCKER: "-p 8080:8080"
  before_script:
    # Установка зависимостей
    - apt-get update -qq && apt-get install -y -qq openssh-client netcat

    # Настройка SSH
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - printf "%s" "$SSH_PRIVATE_KEY_BASE64" | base64 -d > ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
    - chmod 600 ~/.ssh/config

    # Проверка ключа
    - ssh-keygen -l -f ~/.ssh/id_rsa  # Должен показать fingerprint

    # Добавление ключа
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa

    # Проверка подключения
    - echo "SSH_HOST: $SSH_HOST"
    - nc -zvw3 "$SSH_HOST" 22 || true

    # Сканирование SSH-хоста
    - ssh-keyscan -H -p 22 "$SSH_HOST" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    - echo "Deploying to $SSH_HOST..."
    # Ваши команды деплоя через SSH
    - ssh "$SSH_USER@$SSH_HOST" "docker run $OPT_DOCKER your-image"