stages:
  - build
  - deploy

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_HOST: "tcp://docker:2376"
  DOCKER_TLS_VERIFY: "1"
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  DOCKER_DRIVER: overlay2
  DOCKER_IMAGE: "your_project_image"
  PROJECT_DIR: "/opt/project"
  SSH_PORT: "22" 
  SERVER_IP: "" 
  
image: docker:24.0.7

services:
  - docker:24.0.7-dind

before_script:
  - apk add --no-cache openssh-client rsync
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - |
    if [ -z "$SSH_PORT" ]; then
      echo "ERROR: SSH_PORT is not set"
      exit 1
    fi
    if [ -z "$SERVER_IP" ]; then
      echo "ERROR: SERVER_IP is not set"
      exit 1
    fi
  - ssh-keyscan -p $SSH_PORT -t rsa $SERVER_IP >> ~/.ssh/known_hosts

build:
  stage: build
  script:
    - docker build -t $DOCKER_IMAGE:latest .
    - docker tag $DOCKER_IMAGE:latest $CI_REGISTRY/$DOCKER_IMAGE:latest
    - docker push $CI_REGISTRY/$DOCKER_IMAGE:latest
  artifacts:
    paths:
      - PROJECT/
    expire_in: 1 hour

deploy:
  stage: deploy
  when: manual
  script:
    - |
      # Добавляем проверку подключения
      ssh -p $SSH_PORT -T -o ConnectTimeout=5 $SSH_USER@$SERVER_IP exit
      if [ $? -ne 0 ]; then
        echo "ERROR: SSH connection failed"
        exit 1
      fi

      rsync -avz -e "ssh -p $SSH_PORT" \
        --exclude='.git' \
        --exclude='venv' \
        ./PROJECT/ $SSH_USER@$SERVER_IP:$PROJECT_DIR/

      ssh -p $SSH_PORT $SSH_USER@$SERVER_IP /bin/bash << EOF
        set -e
        cd $PROJECT_DIR
        
        docker pull $CI_REGISTRY/$DOCKER_IMAGE:latest
        
        docker stop $DOCKER_IMAGE || true
        docker rm $DOCKER_IMAGE || true
        
        docker run -d \
          --name $DOCKER_IMAGE \
          -p 80:5000 \
          -v $PROJECT_DIR/data:/app/PROJECT/data \
          -v $PROJECT_DIR/static:/app/PROJECT/static \
          -v $PROJECT_DIR/templates:/app/PROJECT/templates \
          -v $PROJECT_DIR/private_key.pem:/app/PROJECT/private_key.pem \
          $CI_REGISTRY/$DOCKER_IMAGE:latest
      EOF
  after_script:
    - docker logout $CI_REGISTRY
  rules:
    - if: $CI_COMMIT_BRANCH == "main"